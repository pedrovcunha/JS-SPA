import { CData } from "./CData";
import { Catalog } from "./Catalog";
import { ContentHandler } from "./ContentHandler";
import { XMLAttribute } from "./XMLAttribute";
import { XMLDocument } from "./XMLDocument";
import { XMLElement } from "./XMLElement";
import { DTDParser } from "./dtd/DTDParser";
import { Grammar } from "./grammar/Grammar";
export declare class DOMBuilder implements ContentHandler {
    inCdData: boolean;
    currentCData: CData;
    document: XMLDocument;
    stack: Array<XMLElement>;
    catalog: Catalog;
    dtdParser: DTDParser;
    grammarUrl: string;
    grammar: Grammar;
    initialize(): void;
    setCatalog(catalog: Catalog): void;
    setDTDParser(dtdParser: DTDParser): void;
    getDocument(): XMLDocument;
    startDocument(): void;
    endDocument(): void;
    xmlDeclaration(version: string, encoding: string, standalone: string): void;
    startElement(name: string, atts: XMLAttribute[]): void;
    endElement(name: string): void;
    internalSubset(declaration: string): void;
    characters(ch: string): void;
    ignorableWhitespace(ch: string): void;
    comment(ch: string): void;
    processingInstruction(target: string, data: string): void;
    parseXmlModel(text: string): Map<string, string>;
    startCDATA(): void;
    endCDATA(): void;
    startDTD(name: string, publicId: string, systemId: string): void;
    endDTD(): void;
    skippedEntity(name: string): void;
}
